9. Implement the Diffie-Hellman Key Exchange mechanism using HTML and 

JavaScript. Consider the end user as one of the parties (Alice) and the JavaScript 

application as other party (bob). 


import java.io.*; 

import java.math.BigInteger; 

class Deffie_Hellman 

{ 

 public static void main(String[]args)throws IOException 

 { 

 BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); 

 System.out.println("\nEnter prime number:"); 

 BigInteger p=new BigInteger(br.readLine()); 

 System.out.println("\nEnter primitive root of "+p+":"); 

 BigInteger g=new BigInteger(br.readLine()); 

 System.out.println("\nEnter value for x less than "+p+":"); 

 BigInteger x=new BigInteger(br.readLine()); 

 BigInteger R1=g.modPow(x,p); 

 System.out.println("R1="+R1); 

 System.out.println("\nEnter value for y less than "+p+":"); 

 BigInteger y=new BigInteger(br.readLine()); 

 BigInteger R2=g.modPow(y,p); 

 System.out.println("R2="+R2); 

 BigInteger k1=R2.modPow(x,p); 

 System.out.println("\nKey calculated at Alice's side:"+k1); 

 BigInteger k2=R1.modPow(y,p); 

 System.out.println("\nKey calculated at Bob's side:"+k2); 

System.out.println("\ndeffie hellman secret key Encryption has Taken"); 

 } 

} 
